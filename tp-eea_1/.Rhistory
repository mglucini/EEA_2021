mutate(p.value = round(p.value, 4))
summary(modelo_inicial)
df_modelo_categoricas <-  encuesta_train %>%
select(peso, altura, edad,genero,consumo_semanal_snacks)
df_modelo_categoricas$consumo_semanal_snacksFactor <- factor(df_modelo_categoricas$consumo_semanal_snacks)
df_modelo_categoricas$consumo_semanal_snacksFactor <- relevel(df_modelo_categoricas$consumo_semanal_snacksFactor, ref = "No comí comida salada o snacks en los últimos 7 días")
modelo_categoricas <- lm(peso ~ altura + edad + genero +  consumo_semanal_snacksFactor + edad * genero, data = df_modelo_categoricas)
modelo_categoricas <- lm(peso ~ altura + edad + genero +  consumo_semanal_snacksFactor + edad * genero, data = df_modelo_categoricas)
tidy_meg <- tidy(modelo_categoricas, conf.int = TRUE)%>%
select(term, statistic, p.value, conf.low, conf.high)%>%
mutate(p.value = round(p.value, 4))
tidy_meg
summary(modelo_categoricas)
df_modelo_categoricas <- df_modelo_categoricas %>%
mutate(consumo_semanal_snacksFactor = case_when((consumo_semanal_snacksFactor == "3 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacksFactor == "2 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacksFactor == "1 veces al día") ~ "1-3 veces al día"))
df_modelo_categoricas$consumo_semanal_snacksFactor <- factor(df_modelo_categoricas$consumo_semanal_snacks)
df_modelo_categoricas$consumo_semanal_snacksFactor <- relevel(df_modelo_categoricas$consumo_semanal_snacksFactor, ref = "No comí comida salada o snacks en los últimos 7 días")
modelo_categoricas <- lm(peso ~ altura + edad + genero +  consumo_semanal_snacksFactor + edad * genero, data = df_modelo_categoricas)
tidy_meg <- tidy(modelo_categoricas, conf.int = TRUE)%>%
select(term, statistic, p.value, conf.low, conf.high)%>%
mutate(p.value = round(p.value, 4))
tidy_meg
encuesta_train <- encuesta_train %>%
mutate(alimentacion = case_when((consumo_semanal_comida_grasa == "4 o más veces al día") ~ "Mala",
(consumo_semanal_comida_grasa == "3 veces al día") ~ "Mala",
(consumo_semanal_comida_grasa == "2 veces al día"&(consumo_semanal_snacks == "4 o más veces al día"|consumo_semanal_snacks == "3 veces al día"|consumo_semanal_snacks == "2 veces al día")) ~ "Mala",
(consumo_semanal_snacks == "4 o más veces al día") ~ "Mala",
(consumo_semanal_snacks == "3 veces al día") ~ "Mala",
(consumo_semanal_gaseosas == "4 o más veces al día") ~ "Mala",
(consumo_semanal_comida_grasa == "No comí comida alta en grasa en los últimos 7 días"&consumo_semanal_gaseosas == "No tomé gaseosas en los últimos 7 días"&(consumo_semanal_snacks != "4 o más veces al día")) ~ "Buena",
((consumo_semanal_comida_grasa != "4 o más veces al día"|consumo_semanal_comida_grasa != "3 veces al día")&consumo_semanal_gaseosas == "No tomé gaseosas en los últimos 7 días"&consumo_semanal_snacks == "No comí comida salada o snacks en los últimos 7 días") ~ "Buena",
(consumo_semanal_comida_grasa == "No comí comida alta en grasa en los últimos 7 días"&consumo_semanal_gaseosas != "4 o más veces al día"&consumo_semanal_snacks == "No comí comida salada o snacks en los últimos 7 días") ~ "Buena",
TRUE ~ "Equilibrada"))
encuesta_train$alimentacion <- factor(encuesta_train$alimentacion)
encuesta_train
encuesta_train$alimentacion <- relevel(encuesta_train$alimentacion, ref = "Equilibrada")
encuesta_train  %>%  count(alimentacion)
modelo_propio_1 <- lm(peso ~ altura + edad + genero +  alimentacion + alimentacion*consumo_semanal_verdura+consumo_semanal_verdura, data = encuesta_train)
tidy_meg <- tidy(modelo_propio_1, conf.int = TRUE)
tidy_meg
plot(modelo_inicial)
View(df_modelo_categoricas)
View(df_modelo_categoricas)
df_modelo_categoricas <- df_modelo_categoricas %>%
mutate(consumo_semanal_snacksFactor = case_when((consumo_semanal_snacksFactor == "3 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacksFactor == "2 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacksFactor == "1 veces al día") ~ "1-3 veces al día"))
df_modelo_categoricas$consumo_semanal_snacksFactor <- factor(df_modelo_categoricas$consumo_semanal_snacksFactor)
#df_modelo_categoricas$consumo_semanal_snacksFactor <- relevel(df_modelo_categoricas$consumo_semanal_snacksFactor, ref = "No comí #comida salada o snacks en los últimos 7 días")
View(df_modelo_categoricas)
View(df_modelo_categoricas)
df_modelo_categoricas <- df_modelo_categoricas %>%
mutate(consumo_semanal_snacksFactor = case_when(
(consumo_semanal_snacksFactor == "3 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacksFactor == "2 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacksFactor == "1 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacksFactor == "No comí comida salada o snacks en los últimos 7 días") ~ "No comí comida salada o snacks en los últimos 7 días",
(consumo_semanal_snacksFactor == "1 a 3 veces durante los últimos 7 días") ~ "1 a 3 veces durante los últimos 7 días",
(consumo_semanal_snacksFactor == "4 o más veces al día") ~ "4 o más veces al día",
(consumo_semanal_snacksFactor == "Dato perdido") ~ "Dato perdido",
(consumo_semanal_snacksFactor == "4 a 6 veces durante los últimos 7 días") ~ "4 a 6 veces durante los últimos 7 días")
)
df_modelo_categoricas$consumo_semanal_snacksFactor <- factor(df_modelo_categoricas$consumo_semanal_snacksFactor)
df_modelo_categoricas$consumo_semanal_snacksFactor <- relevel(df_modelo_categoricas$consumo_semanal_snacksFactor, ref = "No comí comida salada o snacks en los últimos 7 días")
df_modelo_categoricas <- df_modelo_categoricas %>%
mutate(consumo_semanal_snacksFactor = case_when(
(consumo_semanal_snacksFactor == "3 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacksFactor == "2 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacksFactor == "1 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacksFactor == "No comí comida salada o snacks en los últimos 7 días") ~ "No comí comida salada o snacks en los últimos 7 días",
(consumo_semanal_snacksFactor == "1 a 3 veces durante los últimos 7 días") ~ "1 a 3 veces durante los últimos 7 días",
(consumo_semanal_snacksFactor == "4 o más veces al día") ~ "4 o más veces al día",
(consumo_semanal_snacksFactor == "Dato perdido") ~ "Dato perdido",
(consumo_semanal_snacksFactor == "4 a 6 veces durante los últimos 7 días") ~ "4 a 6 veces durante los últimos 7 días")
)
df_modelo_categoricas$consumo_semanal_snacksFactor <- factor(df_modelo_categoricas$consumo_semanal_snacksFactor)
#df_modelo_categoricas$consumo_semanal_snacksFactor <- relevel(df_modelo_categoricas$consumo_semanal_snacksFactor, ref = "No comí #comida salada o snacks en los últimos 7 días")
View(df_modelo_categoricas)
View(df_modelo_categoricas)
df_modelo_categoricas <- df_modelo_categoricas %>%
mutate(consumo_semanal_snacksFactor = case_when(
(consumo_semanal_snacksFactor == "3 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacksFactor == "2 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacksFactor == "1 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacksFactor == "No comí comida salada o snacks en los últimos 7 días") ~ "No comí comida salada o snacks en los últimos 7 días",
(consumo_semanal_snacksFactor == "1 a 3 veces durante los últimos 7 días") ~ "1 a 3 veces durante los últimos 7 días",
(consumo_semanal_snacksFactor == "4 o más veces al día") ~ "4 o más veces al día",
(consumo_semanal_snacksFactor == "Dato perdido") ~ "Dato perdido",
(consumo_semanal_snacksFactor == "4 a 6 veces durante los últimos 7 días") ~ "4 a 6 veces durante los últimos 7 días")
)
df_modelo_categoricas$consumo_semanal_snacksFactor <- factor(df_modelo_categoricas$consumo_semanal_snacksFactor)
#df_modelo_categoricas$consumo_semanal_snacksFactor <- relevel(df_modelo_categoricas$consumo_semanal_snacksFactor, ref = "No comí #comida salada o snacks en los últimos 7 días")
df_modelo_categoricas <- df_modelo_categoricas %>%
mutate(consumo_semanal_snacksFactor2 = case_when(
(consumo_semanal_snacksFactor == "3 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacksFactor == "2 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacksFactor == "1 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacksFactor == "No comí comida salada o snacks en los últimos 7 días") ~ "No comí comida salada o snacks en los últimos 7 días",
(consumo_semanal_snacksFactor == "1 a 3 veces durante los últimos 7 días") ~ "1 a 3 veces durante los últimos 7 días",
(consumo_semanal_snacksFactor == "4 o más veces al día") ~ "4 o más veces al día",
(consumo_semanal_snacksFactor == "Dato perdido") ~ "Dato perdido",
(consumo_semanal_snacksFactor == "4 a 6 veces durante los últimos 7 días") ~ "4 a 6 veces durante los últimos 7 días")
)
df_modelo_categoricas$consumo_semanal_snacksFactor <- factor(df_modelo_categoricas$consumo_semanal_snacksFactor)
#df_modelo_categoricas$consumo_semanal_snacksFactor <- relevel(df_modelo_categoricas$consumo_semanal_snacksFactor, ref = "No comí #comida salada o snacks en los últimos 7 días")
df_modelo_categoricas <-  encuesta_train %>%
select(peso, altura, edad,genero,consumo_semanal_snacks)
df_modelo_categoricas$consumo_semanal_snacksFactor <- factor(df_modelo_categoricas$consumo_semanal_snacks)
df_modelo_categoricas$consumo_semanal_snacksFactor <- relevel(df_modelo_categoricas$consumo_semanal_snacksFactor, ref = "No comí comida salada o snacks en los últimos 7 días")
modelo_categoricas <- lm(peso ~ altura + edad + genero +  consumo_semanal_snacksFactor + edad * genero, data = df_modelo_categoricas)
modelo_categoricas <- lm(peso ~ altura + edad + genero +  consumo_semanal_snacksFactor + edad * genero, data = df_modelo_categoricas)
tidy_meg <- tidy(modelo_categoricas, conf.int = TRUE)%>%
select(term, statistic, p.value, conf.low, conf.high)%>%
mutate(p.value = round(p.value, 4))
tidy_meg
summary(modelo_categoricas)
df_modelo_categoricas <- df_modelo_categoricas %>%
mutate(consumo_semanal_snacksFactor2 = case_when(
(consumo_semanal_snacksFactor == "3 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacksFactor == "2 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacksFactor == "1 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacksFactor == "No comí comida salada o snacks en los últimos 7 días") ~ "No comí comida salada o snacks en los últimos 7 días",
(consumo_semanal_snacksFactor == "1 a 3 veces durante los últimos 7 días") ~ "1 a 3 veces durante los últimos 7 días",
(consumo_semanal_snacksFactor == "4 o más veces al día") ~ "4 o más veces al día",
(consumo_semanal_snacksFactor == "Dato perdido") ~ "Dato perdido",
(consumo_semanal_snacksFactor == "4 a 6 veces durante los últimos 7 días") ~ "4 a 6 veces durante los últimos 7 días")
)
df_modelo_categoricas$consumo_semanal_snacksFactor <- factor(df_modelo_categoricas$consumo_semanal_snacksFactor)
#df_modelo_categoricas$consumo_semanal_snacksFactor <- relevel(df_modelo_categoricas$consumo_semanal_snacksFactor, ref = "No comí #comida salada o snacks en los últimos 7 días")
df_modelo_categoricas <- df_modelo_categoricas %>%
mutate(consumo_semanal_snacksFactor2 = case_when(
(consumo_semanal_snacksFactor == "3 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacksFactor == "2 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacksFactor == "1 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacksFactor == "No comí comida salada o snacks en los últimos 7 días") ~ "No comí comida salada o snacks en los últimos 7 días",
(consumo_semanal_snacksFactor == "1 a 3 veces durante los últimos 7 días") ~ "1 a 3 veces durante los últimos 7 días",
(consumo_semanal_snacksFactor == "4 o más veces al día") ~ "4 o más veces al día",
(consumo_semanal_snacksFactor == "Dato perdido") ~ "Dato perdido",
(consumo_semanal_snacksFactor == "4 a 6 veces durante los últimos 7 días") ~ "4 a 6 veces durante los últimos 7 días")
)
df_modelo_categoricas$consumo_semanal_snacksFactor <- factor(df_modelo_categoricas$consumo_semanal_snacksFactor)
df_modelo_categoricas$consumo_semanal_snacksFactor <- relevel(df_modelo_categoricas$consumo_semanal_snacksFactor, ref = "No comí comida salada o snacks en los últimos 7 días")
modelo_propio_1 <- lm(peso ~ altura + edad + genero +  alimentacion   , data = encuesta_train)
tidy_meg <- tidy(modelo_propio_1, conf.int = TRUE)
tidy_meg
summary(modelo_propio_1)
pred_modelo_inicial <-  augment(modelo_inicial, newdata = encuesta_test)
pred_modelo_inicial
rmse(data = pred_modelo_inicial, truth = peso, estimate = .fitted)
pred_modelo_inicial_train <-  augment(modelo_inicial, newdata = encuesta_train)
rmse(data = pred_modelo_inicial_train, truth = peso, estimate = .fitted)
mae(data = pred_modelo_inicial_train, truth = peso, estimate = .fitted)
pred_modelo_inicial_test <-  augment(modelo_inicial, newdata = encuesta_test)
rmse(data = pred_modelo_inicial_test, truth = peso, estimate = .fitted)
mae(data = pred_modelo_inicial_test, truth = peso, estimate = .fitted)
pred_modelo_inicial_train <-  augment(modelo_inicial, newdata = encuesta_train)
rmse(data = pred_modelo_inicial_train, truth = peso, estimate = .fitted)%>%
add_row(mae(data = pred_modelo_inicial_train, truth = peso, estimate = .fitted))
pred_modelo_inicial_test <-  augment(modelo_inicial, newdata = encuesta_test)
rmse(data = pred_modelo_inicial_test, truth = peso, estimate = .fitted)
mae(data = pred_modelo_inicial_test, truth = peso, estimate = .fitted)
encuesta_test <- encuesta_test %>%
mutate(consumo_semanal_snacks = case_when(
(consumo_semanal_snacks == "3 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacks == "2 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacks == "1 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacks == "No comí comida salada o snacks en los últimos 7 días") ~ "No comí comida salada o snacks en los últimos 7 días",
(consumo_semanal_snacks == "1 a 3 veces durante los últimos 7 días") ~ "1 a 3 veces durante los últimos 7 días",
(consumo_semanal_snacks == "4 o más veces al día") ~ "4 o más veces al día",
(consumo_semanal_snacks == "Dato perdido") ~ "Dato perdido",
(consumo_semanal_snacks == "4 a 6 veces durante los últimos 7 días") ~ "4 a 6 veces durante los últimos 7 días")
)
encuesta_test$consumo_semanal_snacksFactor2 <- factor(encuesta_test$consumo_semanal_snacks)
encuesta_test$consumo_semanal_snacksFactor2 <- relevel(encuesta_test$consumo_semanal_snacksFactor2, ref = "No comí comida salada o snacks en los últimos 7 días")
encuesta_test <- encuesta_test %>%
mutate(consumo_semanal_snacks = case_when(
(consumo_semanal_snacks == "3 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacks == "2 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacks == "1 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacks == "No comí comida salada o snacks en los últimos 7 días") ~ "No comí comida salada o snacks en los últimos 7 días",
(consumo_semanal_snacks == "1 a 3 veces durante los últimos 7 días") ~ "1 a 3 veces durante los últimos 7 días",
(consumo_semanal_snacks == "4 o más veces al día") ~ "4 o más veces al día",
(consumo_semanal_snacks == "Dato perdido") ~ "Dato perdido",
(consumo_semanal_snacks == "4 a 6 veces durante los últimos 7 días") ~ "4 a 6 veces durante los últimos 7 días")
)
encuesta_test$consumo_semanal_snacksFactor2 <- factor(encuesta_test$consumo_semanal_snacks)
encuesta_test$consumo_semanal_snacksFactor2 <- relevel(encuesta_test$consumo_semanal_snacksFactor2, ref = "No comí comida salada o snacks en los últimos 7 días")
pred_modelo_categoricas_train <-  augment(modelo_categoricas, newdata = encuesta_train)
View(encuesta_train)
encuesta_train <- encuesta_train %>%
mutate(consumo_semanal_alcohol = consumo_diario_alcohol * 7)
encuesta_train <- encuesta_train %>%
mutate(ratio_salud = (consumo_diario_alcohol+dias_consumo_comida_rapida)/dias_actividad_fisica_semanal)
encuesta_train[mapply(is.infinite, encuesta_train)] <- 1
View(encuesta_train)
encuesta_test <- encuesta_test %>%
mutate(consumo_semanal_alcohol = consumo_diario_alcohol * 7)
encuesta_test <- encuesta_test %>%
mutate(ratio_salud = (consumo_semanal_alcohol+dias_consumo_comida_rapida)/exp(dias_actividad_fisica_semanal))
encuesta_test[mapply(is.infinite, encuesta_test)] <- 1
encuesta_test[mapply(is.na, encuesta_test)] <- 0
View(encuesta_train)
View(encuesta_modelo6)
library(MASS)
modelo_modelo6_robusto <- rlm(peso ~ altura + edad + genero + dias_actividad_fisica_semanal + consumo_diario_alcohol, data = encuesta_modelo6)
pred_modelo6_robusto <-  augment(modelo_modelo6_robusto, newdata = encuesta_modelo6)
# 2. R2 Score components
# 2.1. Average of actual data
avr_y_actual <- mean(pred_modelo6_robusto$peso)
# 2.2. Total sum of squares
ss_total <- sum((pred_modelo6_robusto$peso - avr_y_actual)^2)
# 2.3. Regression sum of squares
ss_regression <- sum((pred_modelo6_robusto$.fitted - avr_y_actual)^2)
# 2.4. Residual sum of squares
ss_residuals <- sum((pred_modelo6_robusto$peso - pred_modelo6_robusto$.fitted)^2)
# 3. R2 Score
r2 <- 1 - ss_residuals / ss_total
r2
rmse(data = pred_modelo6_robusto, truth = peso, estimate = .fitted)%>%
add_row(mae(data = pred_modelo6_robusto, truth = peso, estimate = .fitted))
View(pred_modelo6_robusto)
pred_modelo6_robusto$.fitted
View(pred_modelo6_robusto)
((7060-1)/7060-6)
install.packages("robustbase", lib="/home/mauro/environments/R/x86_64-pc-linux-gnu-library/4.1")
6ti
.libPaths()
myPaths <- .libPaths()
myPaths <- c(myPaths, "/home/mauro/environments/R/x86_64-pc-linux-gnu-library/4.1")
myPaths <- c(myPaths[5], myPaths[1])
.libPaths(myPaths)
# No mostrar warning en el html
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#Librerias para modificar dataframes
library(tidyverse)
library(reshape2)
library(tidymodels)
#Librerias para graficar
library(ggplot2)
library(ggthemes)
library(ggrepel)
library(scales)
library(ggpubr)
# Importo el dataset de train
encuesta_train <- read_csv("/home/mauro/Escritorio/Facultad/Data Mining/Enfoque Estadístico del Aprendizaje/Trabajo Práctico/data/encuesta_salud_train.csv",show_col_types = FALSE)
# Importo el dataset de test
encuesta_test <- read_csv("/home/mauro/Escritorio/Facultad/Data Mining/Enfoque Estadístico del Aprendizaje/Trabajo Práctico/data/encuesta_salud_test.csv",show_col_types = FALSE)
# Importo el dataset del modelo 6
encuesta_modelo6 <- read_csv("/home/mauro/Escritorio/Facultad/Data Mining/Enfoque Estadístico del Aprendizaje/Trabajo Práctico/data/encuesta_salud_modelo6.csv",show_col_types = FALSE)
# Visualizo un resumen de las variables y sus types
glimpse(encuesta_train)
tabla_exploratorios =  encuesta_train %>%
gather(.,
key = "variables",
value = "valores") %>% # agrupamos por las variables del set
group_by(variables) %>%
summarise(valores_unicos = n_distinct(valores),
porcentaje_faltantes = sum(is.na(valores))/nrow(encuesta_train)*100) %>%
arrange(desc(porcentaje_faltantes), valores_unicos) # ordenamos por porcentaje de faltantes y valores unicos
tabla_exploratorios
# Se crea la matriz de correlación
matriz_corr <- round(cor(encuesta_train%>%
select(edad, altura, peso, dias_consumo_comida_rapida,consumo_diario_alcohol,dias_actividad_fisica_semanal)),2)
# Se usa melt para poder introducirla en ggplot
matriz_corr <- melt(matriz_corr)
# Se crea heatmap con las correlaciones
ggplot(data = matriz_corr, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()+
geom_text(aes(Var2, Var1, label = value), color = "black", size = 3) + # añado el los valores
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab", # cambio el gradiente de leyenda y el texto
name="Correlation") +
theme(axis.text.x = element_text(angle = 45, vjust = 1,# Ajusto el text a 45 grados de la x
size = 9, hjust = 1),
plot.title = element_text(color="black", size=14, face="bold.italic",hjust = 0.5), # ajusto el titulo
axis.title.x = element_blank(), # borro el titulo de eje x
axis.title.y = element_blank())+ # borro el titulo de eje y
ggtitle("Matriz de Correlaciones de la variables númericas")+ # genero el texto del titulo
coord_fixed()
# Guardo el boxplot de peso en función del genero
box_peso <- ggplot(encuesta_train, aes(x = genero, y = peso))+
geom_boxplot(color=c("blue","orange"), fill="orange", alpha=0.2) # Defino colores y filling
# Guardo el boxplot de altura en función del genero
box_altura <- ggplot(encuesta_train, aes(x = genero, y = altura))+
geom_boxplot(color=c("blue","orange"), fill="orange", alpha=0.2) # Defino colores y filling
# Genero Plot concatenando los dos boxplots
plot <- ggarrange(box_peso, box_altura,
ncol = 2, nrow = 1, common.legend = TRUE)
# Utilizo esta función para poner un título.
annotate_figure(plot, top = text_grob("Boxplots por variable Género",
color = "black", face = "bold", size = 14))
# Cambio la variable genero a númerica
encuesta_train <- encuesta_train%>%
mutate(genero_n=case_when(
.$genero=="Femenino" ~ 1,
.$genero=="Masculino" ~ 0
))
# También en el test
encuesta_test <- encuesta_test%>%
mutate(genero_n=case_when(
.$genero=="Femenino" ~ 1,
.$genero=="Masculino" ~ 0
))
# Se crea la matriz de correlación
matriz_corr <- round(cor(encuesta_train%>%
select(edad, genero_n, altura, peso, dias_consumo_comida_rapida,consumo_diario_alcohol,dias_actividad_fisica_semanal)),2)
# Se usa melt para poder introducirla en ggplot
matriz_corr <- melt(matriz_corr)
# Se crea heatmap con las correlaciones
ggplot(data = matriz_corr, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()+
geom_text(aes(Var2, Var1, label = value), color = "black", size = 3) + # añado el los valores
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab", # cambio el gradiente de leyenda y el texto
name="Correlation") +
theme(axis.text.x = element_text(angle = 45, vjust = 1,# Ajusto el text a 45 grados de la x
size = 9, hjust = 1),
plot.title = element_text(color="black", size=14, face="bold.italic",hjust = 0.5), # ajusto el titulo
axis.title.x = element_blank(), # borro el titulo de eje x
axis.title.y = element_blank())+ # borro el titulo de eje y
ggtitle("Matriz de Correlaciones de la variables númericas")+ # genero el texto del titulo
coord_fixed()
freq_hambre_fruta <- encuesta_train %>%
group_by(frecuencia_hambre_mensual, consumo_semanal_frutas) %>% #agrupamos por las variables
summarise(freq_absoluta = n()) %>% #hacemos un count
mutate(freq_relativa = freq_absoluta / sum(freq_absoluta)) #Sacamos la frencuencia absoluta con sum
freq_hambre_fruta
freq_hambre_comidagrasa<- encuesta_train %>%
group_by(frecuencia_hambre_mensual, consumo_semanal_comida_grasa) %>% #agrupamos por las variables
summarise(freq_absoluta = n()) %>% #hacemos un count
mutate(freq_relativa = freq_absoluta / sum(freq_absoluta)) #Sacamos la frencuencia absoluta con sum
freq_hambre_comidagrasa
hist_comida_grasa <- ggplot(encuesta_train, aes(x=consumo_semanal_comida_grasa,color=frecuencia_hambre_mensual))+
geom_histogram(aes(y = stat(count) / sum(count)), stat="count",fill="grey") +
theme_bw()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,# Ajusto el text a 45 grados de la x
size = 7, hjust = 1)) +
scale_color_viridis_d(option = "turbo",
guide = guide_legend(override.aes = list(size = 3) ) )
hist_fruta <- ggplot(encuesta_train, aes(x=consumo_semanal_frutas,color=frecuencia_hambre_mensual))+
geom_histogram(aes(y = stat(count) / sum(count)), stat="count",fill="grey") +
theme_bw()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,# Ajusto el text a 45 grados de la x
size = 7, hjust = 1)) +
scale_color_viridis_d(option = "turbo",
guide = guide_legend(override.aes = list(size = 3) ) )
ggarrange(hist_fruta, hist_comida_grasa,
ncol = 2, nrow = 1, common.legend = TRUE)
# Selecciono las variables a utilizar
df_modelo_inicial <-  encuesta_train %>%
select(peso, altura, edad,genero,dias_actividad_fisica_semanal,consumo_diario_alcohol)
modelo_inicial <- lm(peso ~ altura + edad + genero + dias_actividad_fisica_semanal + consumo_diario_alcohol, data = df_modelo_inicial)
tidy_meg <- tidy(modelo_inicial, conf.int = TRUE)
tidy_meg
tidy_meg %>%
select(term, statistic, p.value, conf.low, conf.high)%>%
mutate(p.value = round(p.value, 4))
broom::glance(modelo_inicial)
df_modelo_categoricas <-  encuesta_train %>%
select(peso, altura, edad,genero,consumo_semanal_snacks)
df_modelo_categoricas$consumo_semanal_snacksFactor <- factor(df_modelo_categoricas$consumo_semanal_snacks)
df_modelo_categoricas$consumo_semanal_snacksFactor <- relevel(df_modelo_categoricas$consumo_semanal_snacksFactor, ref = "No comí comida salada o snacks en los últimos 7 días")
modelo_categoricas <- lm(peso ~ altura + edad + genero +  consumo_semanal_snacksFactor + edad * genero, data = df_modelo_categoricas)
modelo_categoricas <- lm(peso ~ altura + edad + genero +  consumo_semanal_snacksFactor + edad * genero, data = df_modelo_categoricas)
tidy_meg <- tidy(modelo_categoricas, conf.int = TRUE)%>%
select(term, statistic, p.value, conf.low, conf.high)%>%
mutate(p.value = round(p.value, 4))
tidy_meg
broom::glance(modelo_categoricas)
df_modelo_categoricas <- df_modelo_categoricas %>%
mutate(consumo_semanal_snacksFactor2 = case_when(
(consumo_semanal_snacksFactor == "3 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacksFactor == "2 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacksFactor == "1 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacksFactor == "No comí comida salada o snacks en los últimos 7 días") ~ "No comí comida salada o snacks en los últimos 7 días",
(consumo_semanal_snacksFactor == "1 a 3 veces durante los últimos 7 días") ~ "1 a 3 veces durante los últimos 7 días",
(consumo_semanal_snacksFactor == "4 o más veces al día") ~ "4 o más veces al día",
(consumo_semanal_snacksFactor == "Dato perdido") ~ "Dato perdido",
(consumo_semanal_snacksFactor == "4 a 6 veces durante los últimos 7 días") ~ "4 a 6 veces durante los últimos 7 días")
)
df_modelo_categoricas$consumo_semanal_snacksFactor2 <- factor(df_modelo_categoricas$consumo_semanal_snacksFactor2)
df_modelo_categoricas$consumo_semanal_snacksFactor2 <- relevel(df_modelo_categoricas$consumo_semanal_snacksFactor2, ref = "No comí comida salada o snacks en los últimos 7 días")
modelo_categoricas <- lm(peso ~ altura + edad + genero +  consumo_semanal_snacksFactor2 + edad * genero, data = df_modelo_categoricas)
tidy_meg <- tidy(modelo_categoricas, conf.int = TRUE)%>%
select(term, statistic, p.value, conf.low, conf.high)%>%
mutate(p.value = round(p.value, 4))
tidy_meg
broom::glance(modelo_categoricas)
encuesta_train <- encuesta_train %>%
mutate(alimentacion = case_when((consumo_semanal_comida_grasa == "4 o más veces al día") ~ "Mala",
(consumo_semanal_comida_grasa == "3 veces al día") ~ "Mala",
(consumo_semanal_comida_grasa == "2 veces al día"&(consumo_semanal_snacks == "4 o más veces al día"|consumo_semanal_snacks == "3 veces al día"|consumo_semanal_snacks == "2 veces al día")) ~ "Mala",
(consumo_semanal_snacks == "4 o más veces al día") ~ "Mala",
(consumo_semanal_snacks == "3 veces al día") ~ "Mala",
(consumo_semanal_gaseosas == "4 o más veces al día") ~ "Mala",
(consumo_semanal_comida_grasa == "No comí comida alta en grasa en los últimos 7 días"&consumo_semanal_gaseosas == "No tomé gaseosas en los últimos 7 días"&(consumo_semanal_snacks != "4 o más veces al día")) ~ "Buena",
((consumo_semanal_comida_grasa != "4 o más veces al día"|consumo_semanal_comida_grasa != "3 veces al día")&consumo_semanal_gaseosas == "No tomé gaseosas en los últimos 7 días"&consumo_semanal_snacks == "No comí comida salada o snacks en los últimos 7 días") ~ "Buena",
(consumo_semanal_comida_grasa == "No comí comida alta en grasa en los últimos 7 días"&consumo_semanal_gaseosas != "4 o más veces al día"&consumo_semanal_snacks == "No comí comida salada o snacks en los últimos 7 días") ~ "Buena",
TRUE ~ "Equilibrada"))
encuesta_train$alimentacion <- factor(encuesta_train$alimentacion)
encuesta_train$alimentacion <- relevel(encuesta_train$alimentacion, ref = "Equilibrada")
encuesta_train  %>%  count(alimentacion)
modelo_propio_1 <- lm(peso ~ altura + edad + genero*edad + alimentacion   , data = encuesta_train)
tidy_meg <- tidy(modelo_propio_1, conf.int = TRUE)
tidy_meg
broom::glance(modelo_propio_1)
encuesta_train <- encuesta_train %>%
mutate(consumo_semanal_alcohol = consumo_diario_alcohol * 7)
encuesta_train <- encuesta_train %>%
mutate(ratio_salud = (consumo_semanal_alcohol+dias_consumo_comida_rapida)/exp(dias_actividad_fisica_semanal))
encuesta_train[mapply(is.infinite, encuesta_train)] <- 1
encuesta_train[mapply(is.na, encuesta_train)] <- 0
encuesta_train <- encuesta_train %>%
mutate(ratio_salud_norm=scale(ratio_salud))
modelo_propio_2 <- lm(peso ~ altura + edad + ratio_salud_norm + alimentacion , data = encuesta_train)
tidy_meg <- tidy(modelo_propio_2, conf.int = TRUE)
tidy_meg
broom::glance(modelo_propio_2)
pred_modelo_inicial_train <-  augment(modelo_inicial, newdata = encuesta_train)
rmse(data = pred_modelo_inicial_train, truth = peso, estimate = .fitted)%>%
add_row(mae(data = pred_modelo_inicial_train, truth = peso, estimate = .fitted))
pred_modelo_inicial_test <-  augment(modelo_inicial, newdata = encuesta_test)
rmse(data = pred_modelo_inicial_test, truth = peso, estimate = .fitted)%>%
add_row(mae(data = pred_modelo_inicial_test, truth = peso, estimate = .fitted))
encuesta_test <- encuesta_test %>%
mutate(consumo_semanal_snacksFactor2 = case_when(
(consumo_semanal_snacks == "3 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacks == "2 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacks == "1 veces al día") ~ "1-3 veces al día",
(consumo_semanal_snacks == "No comí comida salada o snacks en los últimos 7 días") ~ "No comí comida salada o snacks en los últimos 7 días",
(consumo_semanal_snacks == "1 a 3 veces durante los últimos 7 días") ~ "1 a 3 veces durante los últimos 7 días",
(consumo_semanal_snacks == "4 o más veces al día") ~ "4 o más veces al día",
(consumo_semanal_snacks == "Dato perdido") ~ "Dato perdido",
(consumo_semanal_snacks == "4 a 6 veces durante los últimos 7 días") ~ "4 a 6 veces durante los últimos 7 días")
)
encuesta_test$consumo_semanal_snacksFactor2 <- factor(encuesta_test$consumo_semanal_snacksFactor2)
encuesta_test$consumo_semanal_snacksFactor2 <- relevel(encuesta_test$consumo_semanal_snacksFactor2, ref = "No comí comida salada o snacks en los últimos 7 días")
pred_modelo_categoricas_train <-  augment(modelo_categoricas, newdata = df_modelo_categoricas)
rmse(data = pred_modelo_categoricas_train, truth = peso, estimate = .fitted)%>%
add_row(mae(data = pred_modelo_categoricas_train, truth = peso, estimate = .fitted))
pred_modelo_categoricas_test <-  augment(modelo_categoricas, newdata = encuesta_test)
rmse(data = pred_modelo_categoricas_test, truth = peso, estimate = .fitted)%>%
add_row(mae(data = pred_modelo_categoricas_test, truth = peso, estimate = .fitted))
encuesta_test <- encuesta_test %>%
mutate(alimentacion = case_when((consumo_semanal_comida_grasa == "4 o más veces al día") ~ "Mala",
(consumo_semanal_comida_grasa == "3 veces al día") ~ "Mala",
(consumo_semanal_comida_grasa == "2 veces al día"&(consumo_semanal_snacks == "4 o más veces al día"|consumo_semanal_snacks == "3 veces al día"|consumo_semanal_snacks == "2 veces al día")) ~ "Mala",
(consumo_semanal_snacks == "4 o más veces al día") ~ "Mala",
(consumo_semanal_snacks == "3 veces al día") ~ "Mala",
(consumo_semanal_gaseosas == "4 o más veces al día") ~ "Mala",
(consumo_semanal_comida_grasa == "No comí comida alta en grasa en los últimos 7 días"&consumo_semanal_gaseosas == "No tomé gaseosas en los últimos 7 días"&(consumo_semanal_snacks != "4 o más veces al día")) ~ "Buena",
((consumo_semanal_comida_grasa != "4 o más veces al día"|consumo_semanal_comida_grasa != "3 veces al día")&consumo_semanal_gaseosas == "No tomé gaseosas en los últimos 7 días"&consumo_semanal_snacks == "No comí comida salada o snacks en los últimos 7 días") ~ "Buena",
(consumo_semanal_comida_grasa == "No comí comida alta en grasa en los últimos 7 días"&consumo_semanal_gaseosas != "4 o más veces al día"&consumo_semanal_snacks == "No comí comida salada o snacks en los últimos 7 días") ~ "Buena",
TRUE ~ "Equilibrada"))
encuesta_test$alimentacion <- factor(encuesta_test$alimentacion)
encuesta_test$alimentacion <- relevel(encuesta_test$alimentacion, ref = "Equilibrada")
pred_modelo_propio1_train <-  augment(modelo_propio_1, newdata = encuesta_train)
rmse(data = pred_modelo_propio1_train, truth = peso, estimate = .fitted)%>%
add_row(mae(data = pred_modelo_propio1_train, truth = peso, estimate = .fitted))
pred_modelo_propio1_test <-  augment(modelo_propio_1, newdata = encuesta_test)
rmse(data = pred_modelo_propio1_test, truth = peso, estimate = .fitted)%>%
add_row(mae(data = pred_modelo_propio1_test, truth = peso, estimate = .fitted))
encuesta_test <- encuesta_test %>%
mutate(consumo_semanal_alcohol = consumo_diario_alcohol * 7)
encuesta_test <- encuesta_test %>%
mutate(ratio_salud = (consumo_semanal_alcohol+dias_consumo_comida_rapida)/exp(dias_actividad_fisica_semanal))
encuesta_test[mapply(is.infinite, encuesta_test)] <- 1
#encuesta_test[mapply(is.na, encuesta_test)] <- 0
encuesta_test <- encuesta_test %>%
mutate(ratio_salud_norm=scale(ratio_salud))
pred_modelo_propio2_train <-  augment(modelo_propio_2, newdata = encuesta_train)
rmse(data = pred_modelo_propio2_train, truth = peso, estimate = .fitted)%>%
add_row(mae(data = pred_modelo_propio2_train, truth = peso, estimate = .fitted))
pred_modelo_propio2_test <-  augment(modelo_propio_2, newdata = encuesta_test)
rmse(data = pred_modelo_propio2_test, truth = peso, estimate = .fitted)%>%
add_row(mae(data = pred_modelo_propio2_test, truth = peso, estimate = .fitted))
plot(modelo_inicial)
scatter_train <- ggplot(encuesta_train, aes(x=altura, y=peso)) + geom_point(colour = 4)
scatter_modelo6 <- ggplot(encuesta_modelo6, aes(x=altura, y=peso)) + geom_point(colour = 3)
plot <- ggarrange(scatter_train, scatter_modelo6,
ncol = 2, nrow = 1)
# Utilizo esta función para poner un título.
annotate_figure(plot, top = text_grob("Comparación Train y Modelo6 de su relación Peso/altura",
color = "black", face = "bold", size = 14))
modelo_modelo6 <- lm(peso ~ altura + edad + genero + dias_actividad_fisica_semanal + consumo_diario_alcohol, data = encuesta_modelo6)
broom::glance(modelo_modelo6)
pred_modelo6<-  augment(modelo_modelo6, newdata = encuesta_modelo6)
rmse(data = pred_modelo6, truth = peso, estimate = .fitted)%>%
add_row(mae(data = pred_modelo6, truth = peso, estimate = .fitted))
library(robustbase)
modelo_modelo6_robusto <- lmrob(peso ~ altura + edad + genero + dias_actividad_fisica_semanal + consumo_diario_alcohol, data = encuesta_modelo6)
pred_modelo6_robusto <-  augment(modelo_modelo6_robusto, newdata = encuesta_modelo6)
summary(modelo_modelo6_robusto)
rmse(data = pred_modelo6_robusto, truth = peso, estimate = .fitted)%>%
add_row(mae(data = pred_modelo6_robusto, truth = peso, estimate = .fitted))
View(encuesta_train)
View(encuesta_train)
encuesta_train
modelo_propio_1 <- lm(peso ~ altura + edad + genero + frecuencia_hambre_mensual+dias_consumo_comida_rapida + consumo_diario_alcohol+ edad_consumo_alcohol +dias_actividad_fisica_semanal +consumo_semanal_frutas, data = encuesta_train)
# Se usa la función tidy para evaluar los terminos
tidy_meg <- tidy(modelo_propio_1, conf.int = TRUE)
tidy_meg
modelo_propio_1 <- lm(peso ~ altura + edad + genero + frecuencia_hambre_mensual+dias_consumo_comida_rapida + consumo_diario_alcohol+ edad_consumo_alcohol +dias_actividad_fisica_semanal +consumo_semanal_frutas, data = encuesta_train)
# Se usa la función tidy para evaluar los terminos
tidy_meg <- tidy(modelo_propio_1, conf.int = TRUE)
tidy_meg
broom::grance(modelo_propio_1)
modelo_propio_1 <- lm(peso ~ altura + edad + genero + frecuencia_hambre_mensual+dias_consumo_comida_rapida + consumo_diario_alcohol+ edad_consumo_alcohol +dias_actividad_fisica_semanal +consumo_semanal_frutas, data = encuesta_train)
# Se usa la función tidy para evaluar los terminos
tidy_meg <- tidy(modelo_propio_1, conf.int = TRUE)
tidy_meg
broom::glance(modelo_propio_1)
